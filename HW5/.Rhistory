# rt generates random deviates from t dis
q2_df=rt(10,mean=50,sd=1)
# compare with mu by hand
q2_mean=mean(q2_df)
q2_mean
# rt generates random deviates from t dis
q2_df=rt(10,9)
# compare with mu by hand
q2_mean=mean(q2_df)
q2_mean
## one sample t-test
q2_df=rnorm(10,mean=45,sd=1)
barplot(tabulate(q2_df))
barplot(table(q2_df))
barplot(q2_df)
## one sample t-test
q2_df=rnorm(10,mean=45,sd=1)
q2_df
## two samples independent t-test
q2_df=rnorm(10,mean=45,sd=1)
q3_df=rnorm(10,mean=50,sd=1)
barplot(table(q2_df))
barplot(table(q3_df))
t.test(q2_df,q3_df,var.equal = TRUE)
## two samples dependent t-test
t.test(q2_df,q3_df, paired = T)
boxplot(table(q2_df))
boxplot(q2_df)
boxplot(q3_df)
boxplot(q2_df)
boxplot(q3_df)
## two samples independent t-test
q2_df=rnorm(10,mean=45,sd=1)
q3_df=rnorm(10,mean=48,sd=1)
## two samples independent t-test
q2_df=rnorm(10,mean=45,sd=1)
q3_df=rnorm(10,mean=47,sd=1)
boxplot(q2_df,ylim=c(43,50))
boxplot(q3_df)
t.test(q2_df,q3_df,var.equal = TRUE)
## two samples dependent t-test
t.test(q2_df,q3_df, paired = T)
summary(q1_1)
summary(q1_2)
# sampling from normal distribution
help(rnorm)
# rnorm generate random deviates from a normal dis
q1_1=rnorm(10,mean=100,sd=1)
sd=10
q1_2=rnorm(10,mean=100,sd=10)
summary(q1_1)
summary(q1_2)
# plot the q1_1 and q1_2
boxplot(q1_1,ylim=c(90,110))
boxplot(q1_2,ylim=c(90,110))
# plot the q1_1 and q1_2
boxplot(q1_1,ylim=c(85,110))
boxplot(q1_2,ylim=c(85,110))
boxplot(q1_2,ylim=c(80,110))
# plot the q1_1 and q1_2
boxplot(q1_1,ylim=c(80,110))
boxplot(q1_2,ylim=c(80,110))
# q1_1 was drawn from the dis as following:
x_alxe=seq(80, 120, by = .1)
y_alxe=dnorm(x_alxe, mean = 100, sd = 1)
plot(x_alxe,y_alxe,type="l")
# q1_2 was drawn from the dis as following:
x_alxe=seq(80, 120, by = .1)
y_alxe=dnorm(x_alxe, mean = 100, sd = 10)
plot(x_alxe,y_alxe,type="l")
# Change the size
q1_3=rnorm(100,mean=100,sd=1)
# Change the size
q1_4=rnorm(100,mean=100,sd=10)
### t-tests
help(t.test)
## one sample t-test
q2_df=rnorm(10,mean=45,sd=1)
q2_df
# compare with mu by code
t.test(q2_df, mu = 50)
# compare with mu by hand
q2_mean=mean(q2_df)
q2_se=sd(q2_df)/sqrt(10)
p5_2tail=qt(c(.025, .975), df=9)
CI95_lower=q2_mean+p5_2tail[1]*q2_se
CI95_upper=q2_mean+p5_2tail[2]*q2_se
CI95_lower
CI95_upper
## two samples independent t-test
# q2_df=rnorm(10,mean=45,sd=1)
q3_df=rnorm(10,mean=47,sd=1)
boxplot(q2_df,ylim=c(43,50))
boxplot(q3_df)
t.test(q2_df,q3_df,var.equal = TRUE)
## two samples dependent t-test
t.test(q2_df,q3_df, paired = TRUE)
# sampling from normal distribution
help(rnorm)
# rnorm generate random deviates from a normal dis
q1_1=rnorm(10,mean=100,sd=1)
q1_2=rnorm(10,mean=100,sd=10)
summary(q1_1)
describe(q1_1)
# plot the q1_1 and q1_2
boxplot(q1_1,ylim=c(80,110))
boxplot(q1_2,ylim=c(80,110))
# plot the q1_1 and q1_2
boxplot(q1_1,ylim=c(90,110))
boxplot(q1_2,ylim=c(90,110))
# q1_1 was drawn from the dis as following:
x_alxe=seq(80, 120, by = .1)
y_alxe=dnorm(x_alxe, mean = 100, sd = 1)
plot(x_alxe,y_alxe,type="l")
# q1_2 was drawn from the dis as following:
x_alxe=seq(80, 120, by = .1)
y_alxe=dnorm(x_alxe, mean = 100, sd = 10)
plot(x_alxe,y_alxe,type="l")
# Change the size
q1_3=rnorm(100,mean=100,sd=1)
# Change the size
q1_4=rnorm(100,mean=100,sd=10)
### t-tests
help(t.test)
## one sample t-test
q2_df=rnorm(10,mean=45,sd=1)
q2_df
# compare with mu by code
t.test(q2_df, mu = 50)
# compare with mu by hand
q2_mean=mean(q2_df)
q2_se=sd(q2_df)/sqrt(10)
p5_2tail=qt(c(.025, .975), df=9)
CI95_lower=q2_mean+p5_2tail[1]*q2_se
CI95_upper=q2_mean+p5_2tail[2]*q2_se
CI95_lower
CI95_upper
## two samples independent t-test
# q2_df=rnorm(10,mean=45,sd=1)
q3_df=rnorm(10,mean=47,sd=1)
boxplot(q2_df,ylim=c(43,50))
boxplot(q3_df)
boxplot(q2_df)
boxplot(q3_df)
t.test(q2_df,q3_df,var.equal = TRUE)
## two samples dependent t-test
t.test(q2_df,q3_df, paired = TRUE)
#Q1
rnorm(10,100,1)
q1_1 <- rnorm(10,100,1)
summary(q1_1)
q1_2 <- rnorm(10,100,10)
summary(q1_2)
q1_3 <- rnorm(100,100,10)
summary(q1_3)
sd(q1_1)
sd(q1_2)
sd(q1_3)
boxplot(q1_1,ylim=c(90,110))
boxplot(q1_2,ylim=c(90,110))
boxplot(q1_3,ylim=c(90,110))
summary(q1_1)
sd(q1_1)
summary(q1_2)
sd(q1_2)
q1_3 <- rnorm(100,100,10)
summary(q1_3)
sd(q1_3)
boxplot(q1_1,ylim=c(90,110))
boxplot(q1_2,ylim=c(90,110))
boxplot(q1_3,ylim=c(90,110))
t.test(set1, mu = 50,alternative='less')
#Q2
set1 <- c(50, 40, 46, 49, 40, 58, 45, 47, 46, 43)
t.test(set1, mu = 50,alternative='less')
t.test(set1, mu = 50,alternative='two.sided')
t.test(set1, mu = 50,alternative='less')
# 2 tail:
# Null hypo:
# people on vacation, engage in an “inner dialogue” no diff
# compared to people working
# miu1=50
# Alter Hypo:
# people on vacation, engage in an “inner dialogue” diff compared
# when working.
# Miu1 < 50 or Miu1>50
t.test(set1, mu = 50)
# Q3
set1 <- c(53, 40, 51, 50,43, 62, 49, 47, 51, 39)
#Q2
set1 <- c(50, 40, 46, 49, 40, 58, 45, 47, 46, 43)
# Q3
set2 <- c(53, 40, 51, 50,43, 62, 49, 47, 51, 39)
t.test(set1,set2,var.equal = TRUE,alternative='less')
# Q4
t.test(q2_df,q3_df, paired = TRUE,alternative='less')
# Q4
t.test(set1,set2, paired = TRUE,alternative='less')
##load packages#############
library(ggplot2)
library(dplyr)
install.packages('gplots')
install.packages('ggpubr')
library(gplots)
library(gplots)
library(ggpubr)
##read data file############
poisons = read.csv('https://raw.githubusercontent.com/guru99-edu/R-Programming/master/poisons.csv')
View(poisons)
View(poisons)
head(poisons)
unique(poisons$treat)
unique(poisons$poison)
##One-Way ANOVA#############
oneway = aov(time ~ poison, data = poisons)
summary(oneway)
###plotting#########
ggplot(data = poisons, aes(x = poison, y = time, group = poison)) +
geom_boxplot(aes(colour = poison)) + scale_fill_brewer(palette = 'Dark2') +
labs(title = 'Survival Time by Poison Types')
plotmeans(time ~ poison, data = poisons)
ggplot(data = poisons, aes(x = poison, y = time, group = poison))  +
labs(title = 'Survival Time by Poison Types')
ggplot(data = poisons, aes(x = poison, y = time, group = poison))  +
geom_boxplot(aes(colour = poison))+
labs(title = 'Survival Time by Poison Types')
###plotting#########
ggplot(data = poisons, aes(x = poison, y = time, group = poison)) +
geom_boxplot(aes(colour = poison)) + scale_fill_brewer(palette = 'Dark2') +
labs(title = 'Survival Time by Poison Types')
ggplot(data = poisons,
ggplot(data = poisons, aes(x = poison, y = time, group = poison))+
geom_boxplot(aes(colour = poison))+
labs(title = 'Survival Time by Poison Types')
plotmeans(time ~ poison, data = poisons)
plotmeans(time ~ poison, data = poisons)
###plotting#########
ggplot(data = poisons, aes(x = poison, y = time, group = poison)) +
geom_boxplot(aes(colour = poison)) + scale_fill_brewer(palette = 'Dark2') +
labs(title = 'Survival Time by Poison Types')
###main effects############
twoway_main = aov(time ~ poison + treat, data = poisons)
summary(twoway_main)
###interaction effect#######
twoway_int = aov(time ~ poison * treat, data = poisons)
summary(twoway_int)
###plotting the data#######
p1 = ggplot(data = poisons[poisons$treat == 'A',], aes(x = poison, y = time)) +
geom_boxplot() + labs(title = 'Treatment A')
p2 = ggplot(data = poisons[poisons$treat == 'B',], aes(x = poison, y = time)) +
geom_boxplot() + labs(title = 'Treatment B')
p3 = ggplot(data = poisons[poisons$treat == 'C',], aes(x = poison, y = time)) +
geom_boxplot() + labs(title = 'Treatment C')
p4 = ggplot(data = poisons[poisons$treat == 'D',], aes(x = poison, y = time)) +
geom_boxplot() + labs(title = 'Treatment D')
ggarrange(p1,p2,p3,p4,nrow = 1)
ggarrange(p1,p2,p3,p4,nrow = 2)
ggarrange(p1,p2,p3,p4,nrow = 1)
ggplot(data = poisons, aes(x = poison,
y = time, group = treat)) +
geom_boxplot(aes(colour = treat)) + scale_fill_brewer(palette = 'Dark2')
time_mean = poisons %>%
group_by(poison, treat) %>%
summarise(Means = mean(time))
ggplot(time_mean, aes(x = poison, y = Means, colour = treat)) +
geom_point() + geom_line() + labs(title = 'Time of Survival',
subtitle = 'by poison type and treatment type',
x = 'poison type',
y = 'survival time',
color = 'treatment type')
time_mean = poisons %>%
group_by(poison, treat) %>%
summarise(mean = mean(time))
ggplot(time_mean, aes(x = poison, y = mean, colour = treat)) +
geom_point() + geom_line() + labs(title = 'Time of Survival',
subtitle = 'by poison type and treatment type',
x = 'poison type',
y = 'survival time',
color = 'treatment type')
ggplot(data = poisons)+aes(x = poison, y = time, color = poison)+ geom_point() +
theme(legend.position = "none")
ggplot(data = poisons)+aes(x = poison, y = time, color = poison)+ geom_point() +
theme(legend.position = "none")+geom_hline(yintercept= ms,color=c("red", "green",
"blue", "purple"))
ggplot(data = poisons)+aes(x = poison, y = time, color = poison)+ geom_point() +
theme(legend.position = "none")+geom_line(),color=c("red", "green", "blue", "purple"))
ggplot(data = poisons)+aes(x = poison, y = time, color = poison)+ geom_point() +
theme(legend.position = "none")+geom_line()+color=c("red", "green", "blue", "purple"))
ggplot(data = poisons)+aes(x = poison, y = time, colour = poison)+ geom_point() +
theme(legend.position = "none")+geom_line()+color=c("red", "green", "blue", "purple"))
##One-Way ANOVA#############
oneway = aov(time ~ poison, data = poisons)
summary(oneway)
ggplot(data = poisons)+aes(x = poison, y = time, colour = poison)+ geom_point() +
theme(legend.position = "none")
plotmeans(time ~ poison, data = poisons)
# or:
time_mean1 = poisons %>%
group_by(poison) %>%
summarise(mean = mean(time))
View(time_mean1)
ggplot(data = time_mean1)+aes(x = poison, y = time, colour = poison)+ geom_point() +
theme(legend.position = "none")
ggplot(data = time_mean1)+aes(x = poison, y = time, color = poison)+ geom_point() +
theme(legend.position = "none")
# or:
time_mean1 = poisons %>%
group_by(poison) %>%
summarise(mean = mean(time))
ggplot(data = time_mean1)+aes(x = poison, y = time, color = poison)+ geom_point() +
theme(legend.position = "none")
ggplot(data = time_mean1)+aes(x = poison, y = time, colour = poison)+ geom_point() +
theme(legend.position = "none")
class(poisons)
str(points)
str(poisons)
# The column DV should be "num" (number)
# The column DV should be "char"
poisons$poison = as.factor(poisons$poison)
str(poisons)
##One-Way ANOVA#############
oneway = aov(time ~ poison, data = poisons)
summary(oneway)
###plotting#########
ggplot(data = poisons, aes(x = poison, y = time, group = poison)) +
geom_boxplot(aes(colour = poison)) + scale_fill_brewer(palette = 'Dark2') +
labs(title = 'Survival Time by Poison Types')
plotmeans(time ~ poison, data = poisons)
# or:
time_mean1 = poisons %>%
group_by(poison) %>%
summarise(mean = mean(time))
ggplot(data = time_mean1)+aes(x = poison, y = time, colour = poison)+ geom_point() +
theme(legend.position = "none")
ggplot(data = time_mean1)+aes(x = poison, y = mean, colour = poison)+ geom_point() +
theme(legend.position = "none")
ggplot(data = time_mean1)+aes(x = poison, y = mean, colour = poison)+ geom_point() +
theme(legend.position = "none")+geom_line()
ggplot(data = time_mean1)+aes(x = poison, y = mean, colour = poison)+ geom_point() +
theme(legend.position = "none")+geom_hline(yintercept= ms,color=c("red", "green",
"blue", "purple"))
ggplot(data = time_mean1)+aes(x = poison, y = mean, colour = poison)+ geom_point() +
theme(legend.position = "none")+geom_hline(color=c("red", "green",
"blue", "purple"))
ggplot(data = time_mean1)+aes(x = poison, y = mean, colour = poison)+ geom_point() +
theme(legend.position = "none")
ggplot(data = time_mean1)+aes(x = poison, y = mean, group = poison,colour = poison)+ geom_point() +
theme(legend.position = "none")
plot(time_mean1$poison,time_mean1$mean)
geom_line(time_mean1$poison,time_mean1$mean)
plot(time_mean1$poison,time_mean1$mean,type='o')
plot(time_mean1$poison,time_mean1$mean,type="o")
plot(time_mean1,type="o")
plot(time_mean1,type="o",col = "red",)
plot(time_mean1,type="o",col = "red")
plot(time_mean1$poison,y=time_mean1$mean,type="o",col = "red")
plot(time_mean1$poison,y=time_mean1$mean,type="p",col = "red")
plot(time_mean1$poison,y=time_mean1$mean,type="b",col = "red")
ggplot(data = time_mean1)+aes(x = poison, y = mean, group = poison,colour = poison)+ geom_point() +
theme(legend.position = "none")
plot(time_mean1$poison,y=time_mean1$mean,type="b",col = "red")
View(time_mean1)
# or:
str(time_mean1)
###main effects############
twoway_main = aov(time ~ poison + treat, data = poisons)
ggplot(data = time_mean1)+aes(x = poison, y = mean, group = poison,colour = poison)+ geom_point() +
theme(legend.position = "none")
ggplot(data = poisons, aes(x = poison, y = time, group = treat)) +
geom_boxplot(aes(colour = treat)) + scale_fill_brewer(palette = 'Dark2')
# OR do:
p1 = ggplot(data = poisons[poisons$treat == 'A',], aes(x = poison, y = time)) +
geom_boxplot() + labs(title = 'Treatment A')
p2 = ggplot(data = poisons[poisons$treat == 'B',], aes(x = poison, y = time)) +
geom_boxplot() + labs(title = 'Treatment B')
p3 = ggplot(data = poisons[poisons$treat == 'C',], aes(x = poison, y = time)) +
geom_boxplot() + labs(title = 'Treatment C')
p4 = ggplot(data = poisons[poisons$treat == 'D',], aes(x = poison, y = time)) +
geom_boxplot() + labs(title = 'Treatment D')
ggarrange(p1,p2,p3,p4,nrow = 1)
help('ggarrange')
ggarrange(p1,p2,p3,p4,nrow = 1)
time_mean = poisons %>%
group_by(poison, treat) %>%
summarise(mean = mean(time))
ggplot(time_mean, aes(x = poison, y = mean, colour = treat)) +
geom_point() + geom_line() + labs(title = 'Time of Survival',
subtitle = 'by poison type and treatment type',
x = 'poison type',
y = 'survival time',
color = 'treatment type')
time_mean = poisons %>%
group_by(poison, treat) %>%
summarise(mean = mean(time))
ggplot(time_mean, aes(x = poison, y = mean, colour = treat)) +
geom_point() + geom_line() + labs(title = 'Time of Survival',
subtitle = 'by poison type and treatment type',
x = 'poison type',
y = 'survival time',
color = 'treatment type')
View(time_mean)
View(time_mean)
ggplot(data = time_mean1)+aes(x = poison, y = mean, group = poison,colour = poison)+ geom_point() +
theme(legend.position = "none")
ggplot(time_mean, aes(x = poison, y = mean, colour = treat)) +
geom_point() + geom_line() + labs(title = 'Time of Survival',
subtitle = 'by poison type and treatment type',
x = 'poison type',
y = 'survival time',
color = 'treatment type')
ggplot(poisons, aes(x = poison, y = mean, colour = treat)) +
geom_point() + geom_line() + labs(title = 'Time of Survival',
subtitle = 'by poison type and treatment type',
x = 'poison type',
y = 'survival time',
color = 'treatment type')
ggplot(time_mean, aes(x = poison, y = mean, colour = treat)) +
geom_point() + geom_line() + labs(title = 'Time of Survival',
subtitle = 'by poison type and treatment type',
x = 'poison type',
y = 'survival time',
color = 'treatment type')
# OR do:
p1 = ggplot(data = poisons[poisons$treat == 'A',], aes(x = poison, y = time)) +
geom_boxplot() + labs(title = 'Treatment A')
p2 = ggplot(data = poisons[poisons$treat == 'B',], aes(x = poison, y = time)) +
geom_boxplot() + labs(title = 'Treatment B')
p3 = ggplot(data = poisons[poisons$treat == 'C',], aes(x = poison, y = time)) +
geom_boxplot() + labs(title = 'Treatment C')
p4 = ggplot(data = poisons[poisons$treat == 'D',], aes(x = poison, y = time)) +
geom_boxplot() + labs(title = 'Treatment D')
ggarrange(p1,p2,p3,p4,nrow = 1)
help('ggarrange')
ggplot(time_mean, aes(x = poison, y = mean, colour = treat)) +
geom_line() + labs(title = 'Time of Survival',
subtitle = 'by poison type and treatment type',
x = 'poison type',
y = 'survival time',
color = 'treatment type')
ggplot(time_mean, aes(x = poison, y = mean, group = treat)) +
geom_point() + geom_line() + labs(title = 'Time of Survival',
subtitle = 'by poison type and treatment type',
x = 'poison type',
y = 'survival time',
color = 'treatment type')
ggplot(time_mean, aes(x = poison, y = mean, colour = treat)) +
geom_point() + geom_line() + labs(title = 'Time of Survival',
subtitle = 'by poison type and treatment type',
x = 'poison type',
y = 'survival time',
color = 'treatment type')
ggplot(time_mean, aes(x = poison, y = mean, colour = treat, group=treat)) +
geom_point() + geom_line() + labs(title = 'Time of Survival',
subtitle = 'by poison type and treatment type',
x = 'poison type',
y = 'survival time',
color = 'treatment type')
###plotting the data#######
ggplot(data = poisons, aes(x = poison, y = time, group = treat)) +
geom_boxplot(aes(colour = treat)) + scale_fill_brewer(palette = 'Dark2')
ggplot(data = time_mean1)+aes(x = poison, y = mean, group = poison,colour = poison)+ geom_point() +
+ geom_line() +theme(legend.position = "none")
ggplot(time_mean1,aes(x = poison, y = mean, group = poison,colour = poison))+ geom_point() +
+ geom_line() +theme(legend.position = "none")
ggplot(time_mean1,aes(x = poison, y = mean, colour = poison,group = poison))+ geom_point() +
+ geom_line()
ggplot(time_mean1,aes(x = poison, y = mean, colour = poison,group = poison))+ geom_point() +
geom_line()
ggplot(time_mean1,aes(x = poison, y = mean, colour = poison,group = poison))+
geom_point() + geom_line()
ggplot(time_mean, aes(x = poison, y = mean, colour = treat, group=treat)) +
geom_point() + geom_line()
ggplot(time_mean1,aes(x = poison, y = mean, colour = poison,group = poison))+
geom_point() + geom_line()
ggplot(time_mean1,aes(x = poison, y = mean, colour = poison))+
geom_point() + geom_line()
ggplot(time_mean1,aes(x = poison, y = mean, group = poison))+
geom_point() + geom_line()
ggplot(time_mean1,aes(x = poison, y = mean, group = poison,colours = poison))+
geom_point() + geom_line()
ggplot(time_mean1,aes(x = poison, y = mean, colours = poison))+
geom_point() + geom_line()
ggplot(time_mean1,aes(x = poison, y = mean, colours = poison))+
geom_point() + geom_line()
ggplot(time_mean1,aes(x = poison, y = mean, colour = poison))+
geom_point() + geom_line()
ggplot(time_mean1,aes(x = poison, y = mean, colour = poison))+
geom_point() + geom_line()
#line graph
plotmeans(time ~ poison, data = poisons)
# or:
time_mean1 = poisons %>%
group_by(poison) %>%
summarise(mean = mean(time))
str(time_mean1)
ggplot(time_mean1,aes(x = poison, y = mean, colour = poison))+
geom_point() + geom_line()
ggplot(time_mean1,aes(x = poison, y = mean, colour = poison))+
geom_line()
ggplot(time_mean1,aes(x = poison, y = mean, colour = poison))+
geom_line() +geom_point()
ggplot(time_mean1,aes(x = poison, y = mean)+
ggplot(time_mean1,aes(x = poison, y = mean)）+
ggplot(time_mean1,aes(x = poison, y = mean))+
geom_line() +geom_point()
ggplot(time_mean1,aes(x = poison, y = mean))+
geom_line() +geom_point()
ggplot(time_mean1,aes(x = poison, y = mean, colour = poison))+
geom_line() +geom_point()
# OR do:
ggplot(data = poisons[poisons$treat == 'A',], aes(x = poison, y = time)) +
geom_boxplot() + labs(title = 'Treatment A')

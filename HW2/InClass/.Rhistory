# bar plot for assign 1 #5
set1 <- sample.int(5,50,replace = TRUE)
set1.sort <- sort(set1)
set1.unisort = sort(unique(set1))
set1.tabled = tabulate(match(set1.sort, set1.unisort))
barplot(set1.tabled, names.arg = set1.unisort)
barplot(set1)
setwd("D:/A-NYU/22_Spring/Advanced Psych Stats/Recitation/Recitation R/HW2/InClass")
#scatter plot
getwd()
library(readr)
Set2 <- read_csv("InClassData2.csv")
View(Set2)
Set2 <- read.csv("D:/A-NYU/22_Spring/Advanced Psych Stats/Recitation/Recitation R/HW2/InClassInClassData2.csv")
Set2 <- read.csv("D:/A-NYU/22_Spring/Advanced Psych Stats/Recitation/Recitation R/HW2/InClass/InClassData2.csv")
View(Set2)
View(Set2)
plot(ser2$c(2), set2$c(3))
plot(set2$c(2), set2$c(3))
set2 <- read.csv("D:/A-NYU/22_Spring/Advanced Psych Stats/Recitation/Recitation R/HW2/InClass/InClassData2.csv")
plot(set2$c(2), set2$c(3))
plot(set2[c(2)], set2[c(3)])
plot(set2[:2], set2[:3])
plot(set2$Organizational_Self_Rating, set2$N_of_Friends)
plot(set2$Organizational_Self_Rating, set2$N_of_Friends, col=’green’, pch=4, type = ‘b’)
plot(set2$Organizational_Self_Rating, set2$N_of_Friends, col='green', pch=4, type = 'b')
plot(set2$Organizational_Self_Rating, set2$N_of_Friends, col='green', type = 'b')
plot(set2$Organizational_Self_Rating, set2$N_of_Friends, col='green')
help(plot)
help(plot.default)
help(plot.default)
help(plot.default)
plot(set2$Organizational_Self_Rating, set2$N_of_Friends, xlim = c(0, 100), col='green')
plot(set2$Organizational_Self_Rating, set2$N_of_Friends, xlim = c(0, 100), ylim=c(0,25) col='green')
plot(set2$Organizational_Self_Rating, set2$N_of_Friends, xlim = c(0, 100), ylim=c(0,25), col='green')
summary(set2)
help(summary)
#Q1
set1 <- c(28,23,28,30,24,30,20,25,29,24,24,24,20,28,29)
#Q1
set1 <- c(28,23,28,30,24,30,20,25,29,24,24,24,20,28,29)
#Q1
set1 <- c(28,23,28,30,24,30,20,25,29,24,24,24,20,28,29)
mean(set1)
median(set1)
set1.unique <- unique(set1)
set1.tabled = tabulate(match(set1, set1.unique))
set1.mode <- set1.unique[set1.tabled == max(set1.tabled)]
set1.mode
set1.unique <- unique(set1)
set1.tabled = tabulate(match(set1, set1.unique))
set1.mode <- set1.unique[set1.tabled == max(set1.tabled)]
set1.mode
#Q2
sample.int(20,10)
#Q2
sample.int(20,10)
#Q2
set2 <- sample.int(20,10)
mean(set2)
median(set2)
setwd("D:/A-NYU/22_Spring/Advanced Psych Stats/Recitation/Recitation R/HW1/Inclass")
getwd()
getwd()
setwd("D:/A-NYU/22_Spring/Advanced Psych Stats/Recitation/Recitation R/HW1/Inclass")
library(readr)
set3 <- read_csv("InClassData1.csv")
View(set3)
#3
summary(set3)
mean(set3)
mean(set3)
mean(set3[:1])
mean(set3$RT1)
sapply(set3, mean)
sapple(set3, median)
sappley(set3,sd)
sappley(set3,var)
sapply(set3,sd)
set3[8,4] <- 10*set3[8,4]
set[8,4]
set3[8,4]
sapply(set3, median)
barplot(set4)
#4
set4 <- sample.int(5,50,replace=TRUE)
barplot(set4)
#5
set5 <- sample.int(100,10)
boxplot(set5)
help(table)
#5
set5 <- sample.int(100,10)
borplot(set5)
barplot(set5)
set1 <- sample.int(5,50,replace = TRUE)
barplot(set1)
set1.sort <- sort(set1)
set1.unisort = sort(unique(set1))
set1.tabled = tabulate(match(set1.sort, set1.unisort))
barplot(set1.tabled, names.arg = set1.unisort)
set1 <- sample.int(5,50,replace = TRUE)
barplot(set1)
set1.sort <- sort(set1)
set1.unisort = sort(unique(set1))
set1.tabled = tabulate(match(set1.sort, set1.unisort))
barplot(set1.tabled, names.arg = set1.unisort)
set5 <- sample.int(100,10)
barplot(set5)
boxplot(set5)
table(set5)
median(set5)
sd(set5)
set2 <- read.csv("D:/A-NYU/22_Spring/Advanced Psych Stats/Recitation/Recitation R/HW2/InClass/InClassData2.csv")
summary(set2)
plot(set2$Organizational_Self_Rating, set2$N_of_Friends, xlim = c(0, 100), ylim=c(0,25), main="scatterplot", xlab="organizational self rating", ylab = "#of friends",col='green')
help(plot.default)
#correlation of column2 and 4 in set 2
set3 <- set2[,c(2,4)]
#correlation of column2 and 4 in set 2
set3 <- set2[c(2,4)]
#correlation of column2 and 4 in set 2
set3 <- set2[;2,4]
#correlation of column2 and 4 in set 2
set3 <- set2[,2&4]
View(set3)
View(set3)
View(set2)
View(set2)
#correlation of column2 and 4 in set 2
set3 <- set2[,2:3]
View(set3)
View(set3)
cor(set3, use="complete.obs", method="pearson")
cor(set3, use="complete.obs", method="pearson")
library(Hmisc)
#rcorr function from this package Hmisc gives us the p values for significance
rsign <- rcorr(as.matrix(set2))
rsign
View(set2)
View(set2)
plot(set3[,1], set3[,2], main="SelfRating & # of Friends", xlab="SelfRating", ylab="#of friends", pch=19, col ="green")
rsign
rsign
rsign
#rcorr function from this package Hmisc gives us the p values for significance
rsign <- rcorr(as.matrix(set3))
rsign
cor(set3, use="complete.obs", method="pearson")
plot(set3[,1], set3[,2], main="SelfRating & # of Friends", xlab="SelfRating", ylab="#of friends", pch=19, col ="green")
abline(lsfit(set3[,1],set3[,2])
abline(lsfit(set3$Organizational_Self_Rating,set3$N_of_Friends))
abline(lsfit(set3$Organizational_Self_Rating,set3$N_of_Friends))
# place straight lines on a plot
# and where “b’ represents the slope
# and “a” represents the intercept
help(lm)
lm.3 <- lm(set3$Organizational_Self_Rating~set3$N_of_Friends)
View(lm.3)
View(lm.3)
summary(lm.3)
View(set3)
View(set3)
summary(lm.3)
lm.3 <- lm(set3$N_of_Friends~set3$Organizational_Self_Rating)
summary(lm.3)
plot(set3[,1], set3[,2], main="SelfRating & # of Friends", xlab="SelfRating", ylab="#of friends", pch=19, col ="green")
abline(lsfit(set3$Organizational_Self_Rating,set3$N_of_Friends))
lm.3 <- lm(set3$N_of_Friends~set3$Organizational_Self_Rating)
summary(lm.3)
abline(set3$N_of_Friends=12)
abline(h=12)
help(abline)
library(ppcor)
install.packages("ppcor")
library(ppcor)
library("MASS")
ppcor(set3$N_of_Friends~set3$Organizational_Self_Rating)
MASS(set3$N_of_Friends~set3$Organizational_Self_Rating)
library(ppcor)
ppcoe(set3$N_of_Friends~set3$Organizational_Self_Rating)
ppcor(set3$N_of_Friends~set3$Organizational_Self_Rating)
library(psych)
partial.r(set3$N_of_Friends~set3$Organizational_Self_Rating)
partial.r(set3$N_of_Friends ~ set3$Organizational_Self_Rating)
partial.r(set3[:,2] ~ set3[:,3])
partial.r(set3[,2] ~ set3[,3])
help(partial.r)
partial.r(set3[,2] ~ set3[,3],use="pairwise")
partial.r(set3[,2] ~ set3[,3],use="pairwise",,method="pearson")
partial.r(set3[c(2)] ~ set3[c(3)],use="pairwise",,method="pearson")
partial.r(set3[,c(2)] ~ set3[,c(3)],use="pairwise",,method="pearson")
partial.r(set3,set3$Organizational_Self_Rating,set3$N_of_Friends,use="pairwise",,method="pearson")
partial.r(set3,set3$Organizational_Self_Rating, set3$N_of_Friends,use="pairwise",method="pearson")
partial.r(set3,set3$Organizational_Self_Rating,set3$N_of_Friends,use="pairwise",method="pearson")
partial.r(set3,Organizational_Self_Rating,N_of_Friends,use="pairwise",method="pearson")
partial.r(set3,c(1),c(2),method="pearson")
partial.r(set3,c(1,2),c(1,2),method="pearson")
partial.r(set3,c(1),c(2),method="pearson")
partial.r(set2,c(2),c(3),method="pearson")
partial.r(set2,1:2,method="pearson")
partial.r(set2,1,2,method="pearson")
help(partial.r)
partial.r(set2,1,2,use = "pairwise",method="pearson")
partial.r(set2,2,3,use = "pairwise",method="pearson")
partial.r(set2,c(2),c(3),use = "pairwise",method="pearson")
partial.r(set2,c(1,2),c(3),use = "pairwise",method="pearson")
ppcor(set3$N_of_Friends~set3$Organizational_Self_Rating)
# rcorr function from this package Hmisc gives us the p values for significance
rsign <- rcorr(as.matrix(set3))
rsign
partial.r(set2,c(1,2),c(3),use = "pairwise",method="pearson")
# The argument “replace = TRUE” allows the command
# “sample.int” to drawn from the vector 1 through 5 here
# and then return the selection drawn after it
# has been pulled.
getwd()
set4 <- read.csv("D:/A-NYU/22_Spring/Advanced Psych Stats/Recitation/Recitation R/HW1/InClassData1.csv")
library(readr)
set1 <- read_csv("InClassData1.csv")
View(set1)
# setwd("D:/A-NYU/22_Spring/Advanced Psych Stats/Recitation/Recitation R")
getwd()
set4 <- read.csv("D:/A-NYU/22_Spring/Advanced Psych Stats/Recitation/Recitation R/HW1/Inclass/InClassData1.csv")
set4 <- read.csv("D:/A-NYU/22_Spring/Advanced Psych Stats/Recitation/Recitation R/HW1/Inclass/InClassData1.csv")
partial.r(set4,c(2),c(4),use = "pairwise",method="pearson")
partial.r(set4,c(1,2),c(3,4),use = "pairwise",method="pearson")
partial.r(set4$RT2~set4$RT1)
partial.r(set4$RT2~set4$RT1, use="pairwise")
partial.r(set4,set4$RT2,set4$RT1, use="pairwise")
partial.r(set4,c(2,4), use="pairwise")
partial.r(set4,c(2),c(4), use="pairwise")
help(partial.r)
partial.r(set4,c(2),c(4), use="pairwise",method="pearson")
partial.r(set4,c(2),c(4), use="pairwise",method="spearman")
View(set4)
View(set4)
partial.r(set4,RT1,RT2, use="pairwise",method="spearman")
partial.r(set4,set4$RT1,RT2, use="pairwise",method="spearman")
partial.r(set4,set4$RT1,set4$RT2, use="pairwise",method="spearman")
partial.r(set4,c(1,3),c(2,4), use="pairwise",method="spearman")
partial.r(set4,c(1,3),c(2,4), use="pairwise",method="pearson")
help(corr.p)
# For partial correlation
# library(psych)
corr.test(set3,use = "pairwise",method="pearson",adjust="holm", alpha=.05)
## scatter plot and correlation
getwd()
setwd("D:/A-NYU/22_Spring/Advanced Psych Stats/Recitation/Recitation R/HW2/InClass")
set2 <- read.csv("D:/A-NYU/22_Spring/Advanced Psych Stats/Recitation/Recitation R/HW2/InClass/InClassData2.csv")
# correlation of column 2 and 3 in set 2
set3 <- set2[,2:3]
# For partial correlation
# library(psych)
corr.test(set3,use = "pairwise",method="pearson",adjust="holm", alpha=.05)
# For partial correlation
# library(psych)
corr.test(set3,use = "pairwise",method="pearson",adjust="holm", alpha=.05)
# For partial correlation
# library(psych)
corr.test(set3,use = "pairwise",method="pearson",adjust="holm", alpha=.05, r,15,short = FALSE)
# For partial correlation
# library(psych)
corr.test(set3,use = "pairwise",method="pearson",adjust="holm", alpha=.05, r,15,short = "FALSE")
# For partial correlation
# library(psych)
corr.test(set3,use = "pairwise",method="pearson",adjust="holm", alpha=.05, r,15)
# For partial correlation
# library(psych)
corr.test(set3,use = "pairwise",method="pearson",adjust="holm", alpha=.05, ,15)
help(corr.p)
corr.p(set3,15)
corr.test(set3,use = "pairwise",method="pearson",adjust="holm", alpha=.05)
# correlation of column 2 and 3 in set 2
set3 <- set2[,2:3]
cor(set3, use="complete.obs", method="pearson")
library(Hmisc)
# rcorr function from this package Hmisc gives us the p values for significance
rsign <- rcorr(as.matrix(set3))
rsign
cor(set3, use="complete.obs", method="spearman")
library(Hmisc)
# rcorr function from this package Hmisc gives us the p values for significance
rsign <- rcorr(as.matrix(set3))
rsign
# rcorr function from this package Hmisc gives us the p values for significance
rsign <- rcorr(as.matrix(set3),type = "spearman")
rsign
cor(set3, use="complete.obs", method="spearman")
# Scatterplot
plot(set3[,1], set3[,2], main="SelfRating & # of Friends", xlab="SelfRating", ylab="#of friends", pch=19, col ="green")
abline(lsfit(set3$Organizational_Self_Rating,set3$N_of_Friends))
abline(h=12)
help(abline)
# find the linear model for the best fit line.
help(lm)
lm.3 <- lm(set3$N_of_Friends~set3$Organizational_Self_Rating)
# y~ x
summary(lm.3)
